# test config:
# docker run --rm -v ./nginx.conf:/etc/nginx/nginx.conf  -p 8004:80 nginx
worker_rlimit_nofile 4096;
worker_processes 8;

events {
    worker_connections  1024;
}

http {
  sendfile        on;
  keepalive_timeout  65;

  include /etc/nginx/mime.types;
  default_type application/octet-stream;

  open_file_cache max=1024 inactive=10s;
  open_file_cache_valid 120s;

  proxy_cache_path /var/cache/nginx levels=1:2 keys_zone=my_static_cache:10m max_size=10g inactive=60m use_temp_path=off;

  server {
      listen       80;
      listen  [::]:80;
      server_name  localhost;

      #access_log  /var/log/nginx/host.access.log  main;

      gzip on;
      gzip_types
        text/css
        text/plain
        text/javascript
        application/javascript
        application/json
        application/x-javascript
        application/xml
        application/xml+rss
        application/xhtml+xml
        application/x-font-ttf
        application/x-font-opentype
        application/vnd.ms-fontobject
        image/svg+xml
        image/x-icon
        application/rss+xml
        application/atom_xml;
      gzip_vary on;
      gzip_proxied    any;
      gzip_comp_level 9;
      gzip_min_length 100;

      location / {
          proxy_cache my_static_cache;
          proxy_cache_key "$scheme$host$request_uri";
          proxy_cache_revalidate on;
          proxy_cache_min_uses 3;
          proxy_cache_use_stale error timeout updating http_500 http_502
                                http_503 http_504;
          proxy_cache_background_update on;
          proxy_cache_lock on;
          proxy_buffering on;

          proxy_cache_valid  200 302  60m;
          proxy_cache_valid  404      1m;

          add_header X-Cache-Status $upstream_cache_status;

          proxy_http_version 1.1;
          proxy_set_header Upgrade $http_upgrade;
          proxy_set_header Connection "Upgrade";
          proxy_set_header Host $host;

          proxy_read_timeout 1200s;
          send_timeout 1200s;

          root   /usr/share/nginx/html;
          index  index.html index.htm;
          try_files $uri $uri/ /index.html?q=$uri&$args;
          add_header Access-Control-Allow-Origin *;
      }

      #error_page  404              /404.html;

      # redirect server error pages to the static page /50x.html
      #
      error_page   500 502 503 504  /50x.html;
      location = /50x.html {
          root   /usr/share/nginx/html;
          add_header Access-Control-Allow-Origin *;
      }
  }
}